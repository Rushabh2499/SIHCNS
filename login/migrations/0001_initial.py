# Generated by Django 3.0.4 on 2020-03-20 16:58

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='Airport',
            fields=[
                ('a_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('altitude', models.IntegerField(blank=True, null=True)),
                ('area', models.FloatField(blank=True, null=True)),
                ('longitude', models.CharField(blank=True, max_length=10, null=True)),
                ('latitude', models.CharField(blank=True, max_length=10, null=True)),
                ('code', models.CharField(blank=True, max_length=3, null=True)),
            ],
            options={
                'db_table': 'airport',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cdvordaily',
            fields=[
                ('date', models.DateTimeField(primary_key=True, serialize=False)),
                ('azimuth_angle', models.IntegerField(blank=True, db_column='Azimuth_angle', null=True)),
                ('number_30hz_modulation', models.IntegerField(blank=True, db_column='30Hz_modulation', null=True)),
                ('number_9960hz_modulation', models.IntegerField(blank=True, db_column='9960Hz_modulation', null=True)),
                ('number_9960hz_deviation', models.IntegerField(blank=True, db_column='9960Hz_deviation', null=True)),
                ('field_intensity', models.IntegerField(blank=True, null=True)),
                ('ident_modulation', models.IntegerField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'cdvordaily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cdvormonthly',
            fields=[
                ('date', models.DateTimeField(primary_key=True, serialize=False)),
                ('measured_bearing_1', models.FloatField(blank=True, null=True)),
                ('bearing_deviation_1', models.FloatField(blank=True, null=True)),
                ('measured_bearing_2', models.FloatField(blank=True, null=True)),
                ('bearing_deviation_2', models.FloatField(blank=True, null=True)),
                ('measured_bearing_3', models.FloatField(blank=True, null=True)),
                ('bearing_deviation_3', models.FloatField(blank=True, null=True)),
                ('measured_deviation_4', models.FloatField(blank=True, null=True)),
                ('bearing_deviation_4', models.FloatField(blank=True, null=True)),
                ('measured_deviation_5', models.FloatField(blank=True, null=True)),
                ('bearing_deviation_5', models.FloatField(blank=True, null=True)),
                ('error_spread', models.FloatField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'cdvormonthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Cdvorweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('ps_5v', models.IntegerField(blank=True, db_column='PS_5V', null=True)),
                ('ps_12v', models.IntegerField(blank=True, db_column='PS_12V', null=True)),
                ('ps_negative_12v', models.IntegerField(blank=True, db_column='PS_negative_12V', null=True)),
                ('ps_28v', models.IntegerField(blank=True, db_column='PS_28V', null=True)),
                ('ps_48v', models.IntegerField(blank=True, db_column='PS_48V', null=True)),
                ('outside_temp', models.IntegerField(blank=True, null=True)),
                ('tx1_temp', models.IntegerField(blank=True, db_column='TX1_temp', null=True)),
                ('tx2_temp', models.IntegerField(blank=True, db_column='TX2_temp', null=True)),
                ('out_temp_enabled', models.CharField(blank=True, db_column='Out_temp_enabled', max_length=10, null=True)),
                ('am', models.IntegerField(blank=True, db_column='AM', null=True)),
                ('fm', models.IntegerField(blank=True, db_column='FM', null=True)),
                ('sideband_frequency', models.IntegerField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'cdvorweekly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Communication',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_id', models.IntegerField()),
                ('facility', models.CharField(blank=True, max_length=20, null=True)),
                ('make', models.CharField(blank=True, max_length=20, null=True)),
                ('model', models.CharField(blank=True, max_length=20, null=True)),
                ('power', models.IntegerField(blank=True, null=True)),
                ('doi', models.DateField(blank=True, db_column='DOI', null=True)),
                ('doc', models.DateField(blank=True, db_column='DOC', null=True)),
                ('location', models.CharField(blank=True, max_length=20, null=True)),
            ],
            options={
                'db_table': 'communication',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Datisdaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('room_temp', models.IntegerField(blank=True, null=True)),
                ('status_of_ac', models.CharField(blank=True, db_column='status_of_AC', max_length=10, null=True)),
                ('status_of_ups', models.CharField(blank=True, db_column='status_of_UPS', max_length=10, null=True)),
                ('status_of_servera', models.CharField(blank=True, db_column='status_of_serverA', max_length=10, null=True)),
                ('status_of_serverb', models.CharField(blank=True, db_column='status_of_serverB', max_length=10, null=True)),
                ('datetime_of_servers_wrt_gps_clk', models.CharField(blank=True, db_column='datetime_of_servers_wrt_GPS_CLK', max_length=10, null=True)),
                ('status_of_disk_array', models.CharField(blank=True, db_column='status_of_Disk_array', max_length=10, null=True)),
                ('vhftx_atis_status', models.CharField(blank=True, db_column='VHFTX_ATIS_status', max_length=10, null=True)),
                ('vhfrx_atis_status', models.CharField(blank=True, db_column='VHFRX_ATIS_status', max_length=10, null=True)),
                ('datis_update', models.CharField(blank=True, db_column='DATIS_update', max_length=10, null=True)),
                ('audio_quality', models.CharField(blank=True, db_column='Audio_quality', max_length=10, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'datisdaily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Datisweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('serveraorb', models.CharField(blank=True, db_column='serverAorB', max_length=1, null=True)),
                ('ups_ip', models.IntegerField(blank=True, db_column='UPS_ip', null=True)),
                ('ups_op', models.IntegerField(blank=True, db_column='UPS_op', null=True)),
                ('dust_free', models.CharField(db_column='Dust_free', max_length=5)),
                ('lan_status', models.CharField(blank=True, db_column='LAN_status', max_length=5, null=True)),
                ('time_sync', models.CharField(blank=True, max_length=5, null=True)),
                ('audio_quality', models.CharField(blank=True, db_column='Audio_quality', max_length=5, null=True)),
                ('ptt_off_interval_seconds', models.IntegerField(blank=True, null=True)),
                ('main_to_standby_changeover', models.CharField(blank=True, max_length=5, null=True)),
                ('status_of_rop', models.CharField(blank=True, db_column='status_of_ROP', max_length=5, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'datisweekly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dgm',
            fields=[
                ('dgm_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('designation', models.CharField(blank=True, max_length=10, null=True)),
                ('contact', models.IntegerField(blank=True, null=True)),
                ('password', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'dgm',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dmedaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('eqpt_shelter_cleanliness', models.CharField(blank=True, max_length=10, null=True)),
                ('battery_room_cleanliness', models.CharField(blank=True, db_column='Battery_room_cleanliness', max_length=10, null=True)),
                ('ac_status', models.CharField(blank=True, db_column='AC_status', max_length=20, null=True)),
                ('eqpt_shelter_temperature', models.FloatField(blank=True, null=True)),
                ('mains_power_supply', models.IntegerField(blank=True, null=True)),
                ('stabiliser_output', models.IntegerField(blank=True, null=True)),
                ('batterybank_voltage', models.IntegerField(blank=True, null=True)),
                ('status_of_monitor', models.CharField(blank=True, max_length=10, null=True)),
                ('unusual_noise', models.CharField(blank=True, max_length=10, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'dmedaily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dmemonthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('sgdnf_pulse_width', models.FloatField(blank=True, db_column='SGDNF_pulse_width', null=True)),
                ('sgdnf_amplitude', models.FloatField(blank=True, db_column='SGDNF_amplitude', null=True)),
                ('squitter_rate_of_inhibit_interrogation', models.FloatField(blank=True, db_column='Squitter_rate_of_inhibit_interrogation', null=True)),
                ('max_reply_rate_khz', models.FloatField(blank=True, db_column='max_reply_rate_KHz', null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'dmemonthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dmeweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('test_interrogation_module', models.IntegerField(blank=True, null=True)),
                ('rx_video_module', models.IntegerField(blank=True, db_column='RX_video_module', null=True)),
                ('number_100w_module', models.IntegerField(blank=True, db_column='100W_module', null=True)),
                ('monitor_module', models.IntegerField(blank=True, db_column='Monitor_module', null=True)),
                ('ac_regulator_ip', models.IntegerField(blank=True, db_column='AC_regulator_ip', null=True)),
                ('ac_regulator_op', models.IntegerField(blank=True, db_column='AC_regulator_op', null=True)),
                ('system_delay', models.FloatField(blank=True, null=True)),
                ('pulse_pair_spacing_sepn', models.FloatField(blank=True, db_column='pulse_pair_spacing_SEPN', null=True)),
                ('reply_efficiency_percent', models.FloatField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'dmeweekly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dscndaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('sat_led', models.CharField(blank=True, db_column='SAT_LED', max_length=10, null=True)),
                ('odu_led', models.CharField(blank=True, db_column='ODU_LED', max_length=10, null=True)),
                ('io_led', models.CharField(blank=True, db_column='IO_LED', max_length=10, null=True)),
                ('alarm_led', models.CharField(blank=True, db_column='Alarm_LED', max_length=10, null=True)),
                ('power_led', models.CharField(blank=True, db_column='Power_LED', max_length=10, null=True)),
                ('v35_led', models.CharField(blank=True, db_column='V35_LED', max_length=20, null=True)),
                ('ip_voltage', models.IntegerField(blank=True, db_column='IP_Voltage', null=True)),
                ('op_voltage', models.IntegerField(blank=True, db_column='OP_voltage', null=True)),
                ('battery_voltage', models.IntegerField(blank=True, db_column='Battery_Voltage', null=True)),
                ('coro_function', models.CharField(blank=True, db_column='CorO_function', max_length=5, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'dscndaily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dscnmonthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('cleaning_dscn_associated_eqpt', models.TextField(blank=True, db_column='Cleaning_DSCN_associated_eqpt', null=True)),
                ('battery_backup_time_of_ups1nups2', models.TextField(blank=True, db_column='Battery_backup_time_of_UPS1nUPS2', null=True)),
                ('ups_battery_voltage_on_load', models.TextField(blank=True, db_column='UPS_battery_voltage_on_load', null=True)),
                ('antenna_n_cable_check', models.TextField(blank=True, db_column='Antenna_n_cable_check', null=True)),
                ('earth_resistance', models.TextField(blank=True, db_column='Earth_resistance', null=True)),
                ('eorn_voltage', models.IntegerField(blank=True, db_column='EorN_voltage', null=True)),
                ('eqpt_status_after_check', models.CharField(blank=True, max_length=5, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'dscnmonthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Dscnweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('air_conditioning_check', models.TextField(blank=True, db_column='Air_conditioning_check', null=True)),
                ('cleaning_dscn_associated_eqpt', models.TextField(blank=True, db_column='Cleaning_DSCN_associated_eqpt', null=True)),
                ('ups1_ups2_battery_backup', models.TextField(blank=True, db_column='UPS1_UPS2_battery_backup', null=True)),
                ('ups_battery_voltage_on_load', models.TextField(blank=True, db_column='UPS_battery_voltage_on_load', null=True)),
                ('antenna_n_cable_check', models.TextField(blank=True, db_column='Antenna_n_Cable_check', null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'dscnweekly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Engineer',
            fields=[
                ('emp_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('designation', models.CharField(blank=True, max_length=10, null=True)),
                ('dept', models.CharField(blank=True, max_length=1, null=True)),
                ('contact', models.IntegerField(blank=True, null=True)),
                ('password', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'engineer',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Head',
            fields=[
                ('head_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('designation', models.CharField(blank=True, max_length=10, null=True)),
                ('contact', models.IntegerField(blank=True, null=True)),
                ('password', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'head',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Issues',
            fields=[
                ('issue_no', models.IntegerField(primary_key=True, serialize=False)),
                ('date', models.DateTimeField()),
                ('desgn', models.CharField(blank=True, max_length=10, null=True)),
                ('dept', models.CharField(blank=True, max_length=1, null=True)),
                ('facility_affected', models.CharField(blank=True, max_length=20, null=True)),
                ('observations', models.TextField(blank=True, null=True)),
                ('actions_taken', models.TextField(blank=True, null=True)),
            ],
            options={
                'db_table': 'issues',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Navigation',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_id', models.IntegerField(blank=True, null=True)),
                ('facility', models.CharField(blank=True, max_length=20, null=True)),
                ('frequency', models.IntegerField(blank=True, null=True)),
                ('power', models.IntegerField(blank=True, null=True)),
                ('idnt', models.CharField(blank=True, db_column='IDNT', max_length=10, null=True)),
                ('coordinaten', models.CharField(blank=True, db_column='coordinateN', max_length=11, null=True)),
                ('coordinatee', models.CharField(blank=True, db_column='coordinateE', max_length=11, null=True)),
                ('eqpt', models.CharField(blank=True, max_length=20, null=True)),
                ('doi', models.DateField(blank=True, db_column='DOI', null=True)),
                ('doc', models.DateField(blank=True, db_column='DOC', null=True)),
            ],
            options={
                'db_table': 'navigation',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ndbdaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('room_temp', models.IntegerField(blank=True, null=True)),
                ('ac_mains_voltage_50hz', models.IntegerField(blank=True, db_column='ac_mains_voltage_50Hz', null=True)),
                ('battery_voltage', models.IntegerField(blank=True, null=True)),
                ('reflected_power', models.IntegerField(blank=True, null=True)),
                ('forward_power', models.IntegerField(blank=True, null=True)),
                ('modulation', models.IntegerField(blank=True, null=True)),
                ('system_status_led', models.CharField(blank=True, db_column='system_status_LED', max_length=3, null=True)),
                ('primary_tx_led', models.CharField(blank=True, db_column='Primary_TX_LED', max_length=3, null=True)),
                ('tx_power_on_led', models.CharField(blank=True, db_column='TX_power_ON_LED', max_length=3, null=True)),
                ('remote_ctrl_link_led', models.CharField(blank=True, db_column='remote_ctrl_link_LED', max_length=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'ndbdaily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ndbmonthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('frwd_power_modulation_off', models.IntegerField(blank=True, db_column='frwd_power_modulation_OFF', null=True)),
                ('reflected_power', models.IntegerField(blank=True, null=True)),
                ('modulation_depth_check', models.IntegerField(blank=True, null=True)),
                ('ident_code_check', models.CharField(blank=True, max_length=10, null=True)),
                ('antenna_n_acu_check', models.CharField(blank=True, db_column='antenna_n_ACU_check', max_length=20, null=True)),
                ('ndb_eqpt_n_acu_cleaning', models.CharField(blank=True, db_column='NDB_eqpt_n_ACU_cleaning', max_length=10, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'ndbmonthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Ndbweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('mains_pwr_supply_check', models.TextField(blank=True, null=True)),
                ('battery_terminals_check', models.TextField(blank=True, null=True)),
                ('battery_sealed', models.CharField(blank=True, max_length=3, null=True)),
                ('specific_gravity', models.FloatField(blank=True, null=True)),
                ('antenna_site_condition', models.TextField(blank=True, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'ndbweekly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scctvdaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('ups_battery_indication', models.CharField(blank=True, db_column='UPS_battery_indication', max_length=20, null=True)),
                ('servers_on_condition', models.CharField(blank=True, db_column='Servers_ON_condition', max_length=10, null=True)),
                ('nas_status_in_vmsorvrm', models.CharField(blank=True, db_column='NAS_status_in_VMSorVRM', max_length=10, null=True)),
                ('recording_active_status_vrs_server', models.IntegerField(blank=True, db_column='recording_active_status_VRS_server', null=True)),
                ('recording_active_status_rrs_server', models.CharField(blank=True, db_column='recording_active_status_RRS_server', max_length=20, null=True)),
                ('database_status_vms', models.CharField(blank=True, db_column='database_status_VMS', max_length=10, null=True)),
                ('cameras_ivms', models.CharField(blank=True, db_column='cameras_IVMS', max_length=10, null=True)),
                ('eqpt_cleaning', models.CharField(blank=True, max_length=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'scctvdaily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scctvmonthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('ups_ip_voltage', models.IntegerField(blank=True, null=True)),
                ('ups_op_voltage', models.IntegerField(blank=True, null=True)),
                ('ups_battery_op_voltage_acpwron', models.IntegerField(blank=True, db_column='ups_battery_op_voltage_ACpwrON', null=True)),
                ('ups_battery_op_voltage_acpwroff', models.IntegerField(blank=True, db_column='ups_battery_op_voltage_ACpwrOFF', null=True)),
                ('ups_battery_op_voltage_after15min_acpwroff', models.IntegerField(blank=True, db_column='ups_battery_op_voltage_after15min_ACpwrOFF', null=True)),
                ('server_status', models.CharField(blank=True, max_length=5, null=True)),
                ('cameras_in_vrs_server', models.CharField(blank=True, db_column='cameras_in_VRS_server', max_length=20, null=True)),
                ('nas_free_capacity', models.FloatField(blank=True, db_column='NAS_free_capacity', null=True)),
                ('ofclinkto_l2l3_switches', models.CharField(blank=True, db_column='OFClinkto_L2L3_switches', max_length=20, null=True)),
                ('cleaning_camera_eqpt', models.CharField(blank=True, max_length=20, null=True)),
                ('user_rights_check', models.CharField(blank=True, max_length=10, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'scctvmonthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Scctvweekly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('ups_ip_voltage', models.IntegerField(blank=True, null=True)),
                ('ups_op_voltage', models.IntegerField(blank=True, null=True)),
                ('ups_battery_status', models.CharField(blank=True, max_length=10, null=True)),
                ('server_status', models.CharField(blank=True, max_length=5, null=True)),
                ('camera_nas_status_in_vrs', models.CharField(blank=True, db_column='camera_NAS_status_in_VRS', max_length=10, null=True)),
                ('workstns_n_client_softw_check', models.CharField(blank=True, max_length=10, null=True)),
                ('cameras_client_ivms_softw', models.CharField(blank=True, db_column='cameras_client_IVMS_softw', max_length=10, null=True)),
                ('nas_free_capacity', models.FloatField(blank=True, db_column='NAS_free_capacity', null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'scctvweekly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Supervisor',
            fields=[
                ('supervisor_id', models.IntegerField(primary_key=True, serialize=False)),
                ('name', models.CharField(blank=True, max_length=20, null=True)),
                ('designation', models.CharField(blank=True, max_length=10, null=True)),
                ('dept', models.CharField(blank=True, max_length=1, null=True)),
                ('contact', models.IntegerField(blank=True, null=True)),
                ('password', models.CharField(blank=True, max_length=10, null=True)),
            ],
            options={
                'db_table': 'supervisor',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Surveillance',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('f_id', models.IntegerField()),
                ('facility', models.CharField(blank=True, max_length=20, null=True)),
                ('eqpt', models.CharField(blank=True, max_length=20, null=True)),
                ('doi', models.DateField(blank=True, db_column='DOI', null=True)),
                ('doc', models.DateField(blank=True, db_column='DOC', null=True)),
            ],
            options={
                'db_table': 'surveillance',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vhfdaily',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('rx_no', models.IntegerField(blank=True, db_column='RX_no', null=True)),
                ('frequency_mhz', models.IntegerField(blank=True, db_column='frequency_MHz', null=True)),
                ('bit_test', models.CharField(blank=True, max_length=10, null=True)),
                ('status', models.CharField(blank=True, max_length=10, null=True)),
                ('rxn_check', models.CharField(blank=True, db_column='RXN_check', max_length=10, null=True)),
                ('acordc_coro', models.CharField(blank=True, db_column='ACorDC_CorO', max_length=10, null=True)),
                ('sq_threshold', models.IntegerField(blank=True, db_column='SQ_threshold', null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_Incharge_Approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'vhfdaily',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vhfmonthly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('modulation_mode', models.CharField(blank=True, max_length=10, null=True)),
                ('line_op', models.IntegerField(blank=True, null=True)),
                ('squelch_defeat', models.CharField(blank=True, max_length=3, null=True)),
                ('squelch_threshold', models.IntegerField(blank=True, null=True)),
                ('squelch_carrier_override', models.CharField(blank=True, max_length=3, null=True)),
                ('rf_pre_attn', models.CharField(blank=True, db_column='RF_pre_ATTN', max_length=3, null=True)),
                ('agc', models.CharField(blank=True, db_column='AGC', max_length=3, null=True)),
                ('ready_signal', models.CharField(blank=True, db_column='Ready_signal', max_length=5, null=True)),
                ('squelch_op_marc', models.CharField(blank=True, db_column='Squelch_op_marc', max_length=5, null=True)),
                ('squelch_op_facilities', models.CharField(blank=True, db_column='Squelch_op_facilities', max_length=5, null=True)),
                ('squelch_op_phantom', models.CharField(blank=True, db_column='Squelch_op_phantom', max_length=5, null=True)),
                ('squelch_defeat_ip', models.CharField(blank=True, db_column='Squelch_defeat_ip', max_length=5, null=True)),
                ('bit_test', models.CharField(blank=True, max_length=10, null=True)),
                ('remarks', models.TextField(blank=True, db_column='REMARKS', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'vhfmonthly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Vhfyearly',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('date', models.DateTimeField()),
                ('rx_no', models.IntegerField(blank=True, db_column='RX_no', null=True)),
                ('frequency_mhz', models.FloatField(blank=True, db_column='frequency_MHz', null=True)),
                ('reference_freq', models.FloatField(blank=True, null=True)),
                ('power', models.IntegerField(blank=True, null=True)),
                ('bit_test', models.CharField(blank=True, max_length=5, null=True)),
                ('ac_dc_changeover', models.CharField(blank=True, db_column='AC_DC_changeover', max_length=20, null=True)),
                ('remarks', models.TextField(blank=True, db_column='Remarks', null=True)),
                ('unit_incharge_approval', models.CharField(blank=True, db_column='Unit_incharge_approval', max_length=3, null=True)),
            ],
            options={
                'db_table': 'vhfyearly',
                'managed': False,
            },
        ),
        migrations.CreateModel(
            name='Manors',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
    ]
